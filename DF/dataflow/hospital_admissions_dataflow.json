{
	"name": "hospital_admissions_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "http_output_basic_Hospital_Admissions",
						"type": "DatasetReference"
					},
					"name": "hospitaladmissions"
				},
				{
					"dataset": {
						"referenceName": "country_codes_lookup",
						"type": "DatasetReference"
					},
					"name": "ccodeslookup"
				},
				{
					"dataset": {
						"referenceName": "datelookup",
						"type": "DatasetReference"
					},
					"name": "datadimlookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dl_daily_data",
						"type": "DatasetReference"
					},
					"name": "dailydatasink"
				},
				{
					"dataset": {
						"referenceName": "dl_weekly_data",
						"type": "DatasetReference"
					},
					"name": "seeklydatasink"
				}
			],
			"transformations": [
				{
					"name": "countrycodeslookup"
				},
				{
					"name": "splitfiletodailyandweekly"
				},
				{
					"name": "reportedyearweek"
				},
				{
					"name": "firstandlastday"
				},
				{
					"name": "joinwithdate"
				},
				{
					"name": "pivotdailyforoccupancy"
				},
				{
					"name": "pivotweeklyforoccupancy"
				},
				{
					"name": "sortdailydata"
				},
				{
					"name": "selectfinaldailydata"
				},
				{
					"name": "selecthospitaladmissionsdata"
				},
				{
					"name": "sortfinalweeklydata"
				},
				{
					"name": "selectfinalweeklydata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> hospitaladmissions",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ccodeslookup",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datadimlookup",
				"hospitaladmissions, ccodeslookup lookup(hospitaladmissions@country == ccodeslookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> countrycodeslookup",
				"selecthospitaladmissionsdata split(indicator=='Daily hospital occupancy' || indicator=='Daily ICU occupancy',",
				"     disjoint: false) ~> splitfiletodailyandweekly@(daily, weekly)",
				"datadimlookup derive(new_year_week = year + '-W'+  lpad(week_of_year, 2, '0')) ~> reportedyearweek",
				"reportedyearweek aggregate(groupBy(new_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
				"     reported_week_start_date = min(date),",
				"          reported_week_end_date = max(date)) ~> firstandlastday",
				"splitfiletodailyandweekly@weekly, firstandlastday join(year_week == new_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithdate",
				"splitfiletodailyandweekly@daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          year_week,",
				"          date,",
				"          population,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotdailyforoccupancy",
				"joinwithdate pivot(groupBy(country,",
				"          year_week,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          reported_week_start_date,",
				"          reported_week_end_date,",
				"          population,",
				"          source),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotweeklyforoccupancy",
				"pivotdailyforoccupancy sort(desc(date, true),",
				"     asc(country, true)) ~> sortdailydata",
				"sortdailydata select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date = date,",
				"          hospital_occupancy_count = {Daily hospital occupancy_count},",
				"          icu_occupancy_count = {Daily ICU occupancy_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectfinaldailydata",
				"countrycodeslookup select(mapColumn(",
				"          country = hospitaladmissions@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          date,",
				"          year_week,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selecthospitaladmissionsdata",
				"selectfinalweeklydata sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> sortfinalweeklydata",
				"pivotweeklyforoccupancy select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week = year_week,",
				"          reported_week_start_date,",
				"          reported_week_end_date,",
				"          new_hospital_occupancy_count = {Weekly new hospital admissions per 100k_count},",
				"          new_icu_occupancy_count = {Weekly new ICU admissions per 100k_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectfinalweeklydata",
				"selectfinaldailydata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     filePattern:'daily',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          hospital_occupancy_count,",
				"          icu_occupancy_count,",
				"          source",
				"     )) ~> dailydatasink",
				"sortfinalweeklydata sink(allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     input(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          population as string,",
				"          reported_year_week as string,",
				"          reported_week_start_date as string,",
				"          reported_week_end_date as string,",
				"          new_hospital_occupancy_count as string,",
				"          new_icu_occupancy_count as string,",
				"          source as string",
				"     ),",
				"     filePattern:'weekly',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: []) ~> seeklydatasink"
			]
		}
	}
}